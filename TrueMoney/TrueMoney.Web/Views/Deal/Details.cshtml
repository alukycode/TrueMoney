@using TrueMoney.Common.Enums
@using TrueMoney.Models
@model TrueMoney.Models.ViewModels.DealDetailsViewModel

@{
    ViewBag.Title = "Информация о заявлении " + Model.Deal.Id;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>@Model.Deal.Id</h4>
    <hr />
    @if (!Model.Deal.IsOpen)
    {
        <text>closed</text>
    }
    else if (!Model.Deal.IsWaitForApprove)
    {

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Deal.CreateDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Deal.CreateDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Deal.Amount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Deal.Amount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Deal.Rate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Deal.Rate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Deal.DayCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Deal.DayCount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Deal.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Deal.Description)
            </dd>
            @if (Model.IsCurrentUserBorrower)
            {
                //show info about offers only for deal borrower
                foreach (var offer in Model.Offers)
                {
                    <p>@offer.FullName предлагает бабало под @offer.Rate %</p>
                    <div class="row">
                        <div class="col-md-8">
                            @using (Html.BeginForm("ApplyOffer", "Deal", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("offerId", offer.Id)
                                @Html.Hidden("dealId", Model.Deal.Id)
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Подтвердить предложение" class="btn btn-default" />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else if (Model.IsCurrentUserLender)
            {
                <p>Вы предложили свои деньги в размере @Model.Deal.Amount на @Model.Deal.DayCount дней под @Model.CurrentUserOffer.Rate %</p>
                <div class="row">
                    <div class="col-md-8">
                        @using (Html.BeginForm("RevertOffer", "Deal", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("offerId", Model.CurrentUserOffer.Id)
                            @Html.Hidden("dealId", Model.Deal.Id)
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Отменить предложение" class="btn btn-default"/>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                @Html.ActionLink("Сделать предложение", "CreateOffer", new { dealId = Model.Deal.Id })
            }
        </dl>
    }
    else
    {
        var mainOffer = Model.Offers.FirstOrDefault(x => x.IsWaitForApprove);
        if (Model.IsCurrentUserBorrower)
        {
            <text>wait for lender approve from user with id =
                @Model.Offers.FirstOrDefault(x => x.IsWaitForApprove).Lender.Id</text>
        }
        else if (mainOffer != null && mainOffer.IsCurrentUserLender)
        {
            <div class="row">
                <div class="col-md-8">
                    @using (Html.BeginForm("FinishDeal", "Deal", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("offerId", mainOffer.Id)
                        @Html.Hidden("dealId", Model.Deal.Id)
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Дать взаймы" class="btn btn-default"/>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    @using (Html.BeginForm("RevertOffer", "Deal", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("offerId", mainOffer.Id)
                        @Html.Hidden("dealId", Model.Deal.Id)
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Отменить предложение" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <text>sorry, borrower try to finish with user.id =
                @Model.Offers.FirstOrDefault(x => x.IsWaitForApprove).Lender.Id</text>
        }
    }
</div>
@if (Model.IsCanDeleteOffer)
{
    <div class="row">
        <div class="col-md-8">
            @using (Html.BeginForm("Delete", "Deal", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("dealId", Model.Deal.Id)
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Удалить заявку" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>
    </div>
}

@if (Model.IsMustLoanMoney)
{
    <h4>перевиди бабло челу</h4>
    <p>
        Visa - @Html.ActionLink("Перечислить займ", "Visa", "Payment", routeValues: new RouteValueDictionary(
             new
             {
                 paymentName = $"Перевод денег на счёт {Model.Deal.BorrowerFullName}. Займ № {Model.Deal.Id}.",
                 paymentCount = Model.Deal.Amount,
                 payForId = Model.Deal.Borrower.Id,
                 dealId = Model.Deal.Id
             }), htmlAttributes: null)
    </p>
}