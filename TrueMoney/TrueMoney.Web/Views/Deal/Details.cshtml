@using TrueMoney.Infrastructure.Entities
@using TrueMoney.Infrastructure.Enums
@using TrueMoney.Web.Models
@model TrueMoney.Infrastructure.Entities.Deal

@{
    ViewBag.Title = "Информация о заявлении " + Model.Id;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>@Model.Id</h4>
    <hr/>
    @if (Model.IsClosed)
    {
        <text>closed</text>
    }
    else if (!Model.WaitForApprove)
    {

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.CreateDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CreateDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Count)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Count)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Rate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Rate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DayCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DayCount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
            @if (ViewBag.CurrentUserId == Model.Borrower.Id)
            {
                //show info about offers only for deal borrower
                foreach (var offer in Model.Offers)
                {
                    @Html.DisplayFor(x => offer)
                    @Html.ActionLink("Подтвердить предложение", "ApplyOffer", new { offerId = offer.Id, dealId = Model.Id })
                }
            }
            else if (Model.Offers != null && Model.Offers.Any(x => x.Lender.Id == ViewBag.CurrentUserId))
            {
                var yourOffer = Model.Offers.FirstOrDefault(x => x.Lender.Id == ViewBag.CurrentUserId);
                <p>Вы предложили свои деньги в размере @Model.Count на @Model.DayCount дней под @yourOffer.Rate %</p>
                @Html.ActionLink("Отменить предложение", "RevertOffer", new { offerId = yourOffer.Id, dealId = Model.Id })
            }
            else
            {
                @Html.Partial("~/Views/Partials/CreateOfferForm.cshtml", new CreateOfferForm { DealId = Model.Id })
            }
        </dl>
    }
    else
    {
        var mainOffer = Model.Offers.FirstOrDefault(x => x.Lender.Id == ViewBag.CurrentUserId && x.WaitForApprove);
        if (ViewBag.CurrentUserId == Model.Borrower.Id)
        {
            <text>wait for lender approve from user with id =
                @Model.Offers.FirstOrDefault(x => x.WaitForApprove).Lender.Id</text>
        }
        else if (mainOffer != null && Model.WaitForApprove)
        {
            @Html.ActionLink("Дать взаймы", "FinishDeal", new { offerId = mainOffer.Id, dealId = Model.Id })
            @Html.ActionLink("Отменить предложение", "RevertOffer", new { offerId = mainOffer.Id, dealId = Model.Id })

        }
        else
        {
            <text>sorry, borrower try to finish with user.id =
                @Model.Offers.FirstOrDefault(x => x.WaitForApprove).Lender.Id</text>
        }
    }
</div>
@if (ViewBag.CurrentUserId == Model.Borrower.Id && !Model.IsClosed)
{
    @Html.ActionLink("Удалить заявку", "Delete", new { dealId = Model.Id })
}

@if (Model.Lender != null && ViewBag.CurrentUserId == Model.Lender.Id && Model.Status == DealStatus.WaitForLoan)
{
    <h4>перевиди бабло челу</h4>
    <p>
        Visa - @Html.ActionLink("Перечислить займ", "Visa", "Payment", routeValues: new RouteValueDictionary(
             new
             {
                 paymentName = $"Перевод денег на счёт {Model.Borrower.FirstName}. Займ № {Model.Id}.",
                 paymentCount = Model.Count,
                 payForId = Model.Borrower.Id,
                 dealId = Model.Id
             }), htmlAttributes: null)
    </p>
}