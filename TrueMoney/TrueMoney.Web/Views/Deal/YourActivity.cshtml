@using TrueMoney.Models.Basic
@using TrueMoney.Common.Enums
@model TrueMoney.Models.User.YourActivityViewModel

<div>
    <h4>Личный кабинет</h4>
    <h5>Ваш активный займ:</h5>
    @foreach (var item in Model.Deals.Where(x => x.DealStatus != DealStatus.Closed && x.DealStatus != DealStatus.Open))
    {
        @RenderDeal(item)
    }
    <h5>Ваши завершённые займы:</h5>
    @foreach (var item in Model.Deals.Where(x => x.DealStatus == DealStatus.Closed))
    {
        @RenderDeal(item)
    }
    ---------------------------<br/>
    <h5>Ваша активная заявка:</h5>
    @foreach (var item in Model.Deals.Where(x => x.DealStatus == DealStatus.Open))
    {
        @RenderDeal(item)
    }

    @if (Model.IsCurrentUserActive)
    {
        if (!Model.IsHaveOpenDealOrLoan)
        {
            @Html.ActionLink("Создать заявку", "Create", "Deal", routeValues: null, htmlAttributes: null)<br/>
        }
        else
        {
            <p>Завершите текущий займ и сможете сделать ещё заявку</p>
        }
    }
    else
    {
        <p>Ожидайте подтверждение регистрации и тогда сможете создать заявку</p>
    }

    ---------------------------<br />
    <h5>Ваши предложения:</h5>
    @foreach (var item in Model.Offers)
    {
        @RenderOffer(item)
    }

    ---------------------------<br />
    @Html.ActionLink("Список всех заявок", "Index", "Deal", routeValues: null, htmlAttributes: null)<br />
</div>

@helper RenderOffer(OfferModel offer)
{ 
    <p>
        <strong>@offer.Id</strong> - @offer.InterestRate
        @Html.ActionLink("Просмотреть заявку", "Details", "Deal", routeValues: new { id = offer.DealId }, htmlAttributes: null)<br />
    </p>
}

@helper RenderDeal(DealModel deal)
{
    <p>
        <strong>@deal.Id</strong> - @deal.Amount - @deal.InterestRate
        @Html.ActionLink("Просмотреть заявку", "Details", "Deal", routeValues: new { id = deal.Id }, htmlAttributes: null)<br />
    </p>
}