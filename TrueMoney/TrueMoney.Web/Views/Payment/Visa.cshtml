@model TrueMoney.Models.VisaPaymentViewModel
@{
    ViewBag.Title = "Оплата";
}

<h2>@ViewBag.Title</h2>
<hr />

<h4>@Html.Raw(Model.PaymentName)</h4>

@using (Html.BeginForm(Model.FormAction, "Payment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m=>m.DealId)
        @Html.HiddenFor(m=>m.CanSetPaymentCount)
        @if (Model.CanSetPaymentCount)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PaymentCount, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.PaymentCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentCount, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.PaymentCount)
        }
        <div class="form-group">
            @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValidBefore, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.ValidBefore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValidBefore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CvvCode, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.CvvCode, new { htmlAttributes = new { @class = "form-control", type="password", autocomplete = "new-password" } })
                @Html.ValidationMessageFor(model => model.CvvCode, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <input type="submit" value="Оплатить" class="btn btn-primary"/>
                <a href="@Url.Action("Details", "Deal", new { id = Model.DealId })" class="btn btn-default">Отмена</a>
            </div>
        </div>
    </div>
}