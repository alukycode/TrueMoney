@model TrueMoney.Models.Account.RegisterViewModel

@{
    ViewBag.Title = "Регистрация";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-sm-6 with-right-border">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-sm-6 with-right-border">
                <div class="form-group">
                    @Html.LabelFor(model => model.Passport.Number, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Passport.Number, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Passport.Number, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Passport.DateOfIssuing, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Passport.DateOfIssuing, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Passport.DateOfIssuing, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Passport.GiveOrganization, htmlAttributes: new {@class = "control-label col-sm-4"})
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Passport.GiveOrganization, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Passport.GiveOrganization, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <hr/>

        <div class="form-group">
            <label for="photo" class="control-label col-sm-6">Загрузите страницу паспорта, на которой видна ваша фотография</label>
            <div class="col-sm-6">
                <div class="input-group">
                    <label class="input-group-btn">
                        <span class="btn btn-default">
                            Загрузить <input type="file" id="photo" name="Photo" accept=".jpg,.png"  style="display: none" />
                        </span>
                    </label>
                    <input type="text" name="PhotoFilename" id="filename" class="form-control" readonly="">
                </div>
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <button type="submit" class="center-block btn btn-primary">Зарегистрироваться</button>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).on('change', ':file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $(document).ready(function () {
            $(':file').on('fileselect', function (event, numFiles, label) {
                $("#filename").val(label);
            });
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}