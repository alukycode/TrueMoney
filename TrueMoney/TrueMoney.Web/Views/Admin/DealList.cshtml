@using System.Globalization
@using TrueMoney.Common.Enums
@using TrueMoney.Common.Extensions
@model TrueMoney.Models.Admin.DealListViewModel
@{
    ViewBag.Title = "Все заявки";
}

@section styles
{
    <style>
        table .glyphicon { cursor: pointer; text-decoration: none !important; font-size: 24px; margin-right: 5px;}
        .glyphicon-remove { color: red !important; }
    </style>
}

<h2>@ViewBag.Title</h2>
<hr/>

<table class="table table-bordered table-striped">
    <tr>
        <th>№</th>
        <th>Исходные данные о займе</th>
        <th>Статус займа и платежный план</th>
        <th>Пользователи</th>
        <th>Действия</th>
    </tr>
    @foreach (var deal in Model.Deals.OrderBy(x => x.DealStatus))
    {//если будет время вынести в модель
        var paymentPlan = Model.PaymentPlans.FirstOrDefault(x => x.DealId == deal.Id);
        var payments = paymentPlan != null ? Model.Payments.
            Where(x => x.PaymentPlanId == paymentPlan.Id).OrderBy(x => x.DueDate) : null;
        var bankTransactions = paymentPlan != null ? Model.BankTransactions.
            Where(x => x.PaymentPlanId == paymentPlan.Id).OrderBy(x => x.DateOfPayment) : null;
        var allPaidBefore = paymentPlan != null ? payments.Where(x => x.IsPaid).Select(x => x.Amount + x.Liability).Sum() : 0;
        //some extra money before previous payment
        var extraMoney = paymentPlan != null ? bankTransactions.Select(x => x.Amount).Sum() - allPaidBefore : 0;
        var mainOffer = Model.Offers.FirstOrDefault(x => x.DealId == deal.Id);
        <tr>
            <td>@deal.Id</td>
            <td>
                Создан @deal.CreateDate.Format()
                <br/>Нужно <b>@deal.Amount.Format()</b> р. под <b>@deal.InterestRate.Format()</b> % на <b>@deal.DealPeriod</b> дней
                <br/> <i>@deal.Description</i>
            </td>
            <td>
                <div class="status-@deal.DealStatus" title="@deal.DealStatus">
                    @deal.DealStatus.GetDescription()
                </div>
                @if (paymentPlan != null)
                {
                    <div>
                        Период займа: <b title="Дата перевода денег заёмщику">@paymentPlan.CreateTime.Format()</b> - <b title="Крайний срок выплаты займа">@payments.Last().DueDate.Format()</b>
                    </div>
                    if (payments.Any(x => !x.IsPaid))
                    {
                        <div>
                            Следующий платёж: <b>@payments.First(x => !x.IsPaid).Amount.Format()</b> р. к дате <b>@payments.First(x => !x.IsPaid).DueDate.Format()</b>
                        </div>
                    }
                    if (extraMoney > 0.001m)
                    {
                        <div>
                            Заёмщик частично погасил следующий платёж на @extraMoney.Format() р.
                        </div>
                    }
                }
            </td>
            <td>
                <div>Заёмщик: <b>@deal.OwnerFullName</b></div>
                @if (mainOffer != null)
                {
                    <div> Кредитор: <b>@mainOffer.OffererFullName</b></div>
                }
            </td>
            <td>
                @if (deal.DealStatus != DealStatus.InProgress)
                {
                    <a href="@Url.Action("DeleteDeal", "Admin", new {dealId = deal.Id, userId = deal.OwnerId})" class="glyphicon glyphicon-remove" title="Удалить"></a>
                }
            </td>
        </tr>
    }
</table>
